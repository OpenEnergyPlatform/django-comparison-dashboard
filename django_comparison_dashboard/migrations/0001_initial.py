# Generated by Django 4.2.4 on 2023-10-10 11:10

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Scenario",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="TimeseriesData",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("region", models.CharField(max_length=255)),
                ("input_energy_vector", models.CharField(max_length=255, null=True)),
                ("output_energy_vector", models.CharField(max_length=255, null=True)),
                ("parameter_name", models.CharField(max_length=255)),
                ("technology", models.CharField(max_length=255)),
                ("technology_type", models.CharField(max_length=255)),
                ("unit", models.CharField(max_length=255)),
                ("tags", models.JSONField(max_length=255, null=True)),
                ("method", models.JSONField(max_length=255, null=True)),
                ("source", models.CharField(max_length=255, null=True)),
                ("comment", models.CharField(max_length=255, null=True)),
                ("timeindex_start", models.TimeField()),
                ("timeindex_stop", models.TimeField()),
                ("timeindex_resolution", models.DurationField()),
                ("series", django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeseries",
                        to="django_comparison_dashboard.scenario",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="scenario",
            name="source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scenarios",
                to="django_comparison_dashboard.source",
            ),
        ),
        migrations.CreateModel(
            name="ScalarData",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("region", models.CharField(max_length=255)),
                ("input_energy_vector", models.CharField(max_length=255, null=True)),
                ("output_energy_vector", models.CharField(max_length=255, null=True)),
                ("parameter_name", models.CharField(max_length=255)),
                ("technology", models.CharField(max_length=255)),
                ("technology_type", models.CharField(max_length=255)),
                ("unit", models.CharField(max_length=255)),
                ("tags", models.JSONField(max_length=255, null=True)),
                ("method", models.JSONField(max_length=255, null=True)),
                ("source", models.CharField(max_length=255, null=True)),
                ("comment", models.CharField(max_length=255, null=True)),
                ("value", models.FloatField()),
                ("year", models.IntegerField()),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scalars",
                        to="django_comparison_dashboard.scenario",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
